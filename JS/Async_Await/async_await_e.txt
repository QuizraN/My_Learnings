"1. Rewrite the below using Async-Await syntax
```
function getProcessedData(url) {
  return downloadData(url) // returns a promise
    .catch(e => {
      return downloadFallbackData(url)  // returns a promise
    })
    .then(v => {
      return processDataInWorker(v)  // returns a promise
    })
}
``"

CODE:
async function getProcessedData(url)
{
	try
	{
	const p1= await downloadData(url);
	const p2= await processDataInWorker(p1);
	}
	catch(e)
	{
		await downloadFallbackData(url);
	}
}


NOTE:
1.Asynchronous functions always returns a promise
2.The async keyword allows you to define a function that handles asynchronous operations.
3.You use the await keyword to wait for a Promise to settle either in resolved or rejected state. And you can use the await keyword only inside an async function.
